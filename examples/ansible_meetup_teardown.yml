---
- hosts: localhost
  vars:
    ansible_python_interpreter: "./venv/bin/python"  # Required for virtualenv...
  collections:
    - pureport.pureport
  tasks:
    - set_fact:
        aws_ec2_instance_name: Ansible-EC2-Instance
        aws_ec2_group_name: Ansible-SecurtyGroup
        aws_ec2_key_name: Ansible-KeyPair
        aws_virtual_interface_names:
          - Ansible-VIF-1
          - Ansible-VIF-2
        aws_direct_connect_gateway_id: 9accd1f6-7f87-4da9-a930-6072f799b541
        aws_ec2_vpc_vgw_name: Ansible-VGW
        aws_vpc_cidr_block: 10.0.0.0/24
        aws_vpc_name: Ansible-VPC
        gcp_zone: us-west2-a
        gcp_region: us-west2
        gcp_compute_instance_name: ansible-vm
        gcp_compute_address_name: ansible-address
        gcp_compute_disk_name: ansible-disk
        gcp_compute_firewall_names:
          - anisble-gcp-firewall
          - anisble-gcp-firewall-ssh
        gcp_compute_interconnect_attachment_names:
          - ansible-interconnect-attachment-1
        gcp_compute_router_names:
          - ansible-router-1
        gcp_compute_network_name: ansible-network
        aws_region: us-west-2
        pureport_network_href: /networks/network-vmtZeMr7sdHzLx348wqa3Q
        pureport_google_connection_name: My Google Cloud Connection
        pureport_aws_connection_name: My AWS Private Connection

    - ec2_instance:
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        region: "{{ aws_region }}"
        state: absent
        filters:
          "tag:Name": "{{ aws_ec2_instance_name }}"

    - ec2_group:
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        region: "{{ aws_region }}"
        state: absent
        name: "{{ aws_ec2_group_name }}"

    - ec2_key:
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        region: "{{ aws_region }}"
        state: absent
        name: "{{ aws_ec2_key_name }}"

    - pr_48711_aws_direct_connect_virtual_interface:
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        region: "{{ aws_region }}"
        state: absent
        name: "{{ item }}"
        id_to_associate: ""
      loop: "{{ aws_virtual_interface_names }}"

    - pureport_aws_direct_connect_connection:
        api_base_url: "{{ pureport_api_base_url | default(omit) }}"
        api_key: "{{ pureport_api_key }}"
        api_secret: "{{ pureport_api_secret }}"
        state: absent
        network_href: "{{ pureport_network_href }}"
        name: "{{ pureport_aws_connection_name }}"
        speed: 50
        location_href: ""
        billing_term: HOURLY
        aws_account_id: "{{ aws_account_id }}"
        aws_region: "{{ aws_region }}"

    - ec2_vpc_vgw:
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        region: "{{ aws_region }}"
        state: absent
        name: "{{ aws_ec2_vpc_vgw_name }}"

    - aws_direct_connect_gateway:
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        region: "{{ aws_region }}"
        state: absent
        direct_connect_gateway_id: "{{ aws_direct_connect_gateway_id }}"

    - ec2_vpc_net:
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        region: "{{ aws_region }}"
        state: absent
        name: "{{ aws_vpc_name }}"
        cidr_block: "{{ aws_vpc_cidr_block }}"

    - gcp_compute_instance:
        auth_kind: serviceaccount
        service_account_file: "{{ gcp_service_account_file }}"
        project: "{{ gcp_project }}"
        zone: "{{ gcp_zone }}"
        state: absent
        name: "{{ gcp_compute_instance_name }}"

    - gcp_compute_address:
        auth_kind: serviceaccount
        service_account_file: "{{ gcp_service_account_file }}"
        project: "{{ gcp_project }}"
        region: "{{ gcp_region }}"
        state: absent
        name: "{{ gcp_compute_address_name }}"

    - gcp_compute_disk:
        auth_kind: serviceaccount
        service_account_file: "{{ gcp_service_account_file }}"
        project: "{{ gcp_project }}"
        zone: "{{ gcp_zone }}"
        state: absent
        name: "{{ gcp_compute_disk_name }}"

    - gcp_compute_firewall:
        auth_kind: serviceaccount
        service_account_file: "{{ gcp_service_account_file }}"
        project: "{{ gcp_project }}"
        state: absent
        name: "{{ item }}"
      loop: "{{ gcp_compute_firewall_names }}"

    - pureport_google_cloud_interconnect_connection:
        api_base_url: "{{ pureport_api_base_url | default(omit) }}"
        api_key: "{{ pureport_api_key }}"
        api_secret: "{{ pureport_api_secret }}"
        state: absent
        network_href: "{{ pureport_network_href }}"
        name: "{{ pureport_google_connection_name }}"
        speed: 50
        location_href: ""
        billing_term: HOURLY
        primary_pairing_key: ""

    - gcp_compute_interconnect_attachment:
        auth_kind: serviceaccount
        service_account_file: "{{ gcp_service_account_file }}"
        project: "{{ gcp_project }}"
        region: "{{ gcp_region }}"
        state: absent
        name: "{{ item }}"
        router:
          selfLink: "{{ gcp_compute_router_names[idx] }}"
      loop: "{{ gcp_compute_interconnect_attachment_names }}"
      loop_control:
        index_var: idx

    - gcp_compute_router:
        auth_kind: serviceaccount
        service_account_file: "{{ gcp_service_account_file }}"
        project: "{{ gcp_project }}"
        region: "{{ gcp_region }}"
        state: absent
        name: "{{ item }}"
        network:
          selfLink: "{{ gcp_compute_network_name }}"
      loop: "{{ gcp_compute_router_names }}"

    - gcp_compute_network:
        auth_kind: serviceaccount
        service_account_file: "{{ gcp_service_account_file }}"
        project: "{{ gcp_project }}"
        state: absent
        name: "{{ gcp_compute_network_name }}"
