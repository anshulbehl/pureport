---
- hosts: localhost
  vars:
    ansible_python_interpreter: "./venv/bin/python"  # Required for virtualenv...
  tasks:
    - name: Set fact 'public_connection'
      set_fact:
        public_connection: "{{ (pureport_connection_peering_type | default(PRIVATE)) == 'PUBLIC' }}"

    # https://docs.ansible.com/ansible/latest/modules/ec2_vpc_net_module.html#ec2-vpc-net-module
    - name: Create AWS Virtual Private Cloud
      ec2_vpc_net:
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        region: "{{ aws_region }}"
        name: "{{ aws_vpc_name }}"
        cidr_block: "{{ aws_vpc_cidr_block }}"
      register: aws_vpc
      when: public_connection != true

    # https://docs.ansible.com/ansible/latest/modules/ec2_vpc_subnet_module.html#ec2-vpc-subnet-module
    - name: Create AWS VPC Subnet
      ec2_vpc_subnet:
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        region: "{{ aws_region }}"
        vpc_id: "{{ aws_vpc.vpc.id }}"
        cidr: "{{ aws_vpc_subnet_cidr }}"
      register: aws_vpc_subnet
      when: public_connection != true

    # https://docs.ansible.com/ansible/latest/modules/ec2_vpc_vgw_module.html#ec2-vpc-vgw-module
    - name: Create AWS Virtual Private Gateway
      ec2_vpc_vgw:
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        region: "{{ aws_region }}"
        name: "{{ aws_vgw_name }}"
        vpc_id: "{{ aws_vpc.vpc.id }}"
      register: aws_vgw
      when: public_connection != true

    # https://docs.ansible.com/ansible/latest/modules/ec2_vpc_route_table_module.html#ec2-vpc-route-table-module
    - name: Create AWS VPC Route Table
      ec2_vpc_route_table:
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        region: "{{ aws_region }}"
        vpc_id: "{{ aws_vpc.vpc.id }}"
        tags:  # Used to uniquely identify without 'id'
          Name: "{{ aws_vpc_route_table_name }}"
        propagating_vgw_ids:
          - "{{ aws_vgw.vgw.id }}"
        subnets:
          - "{{ aws_vpc_subnet.subnet.id }}"
      register: aws_vpc_route_table
      when: public_connection != true

    # https://docs.ansible.com/ansible/latest/modules/aws_direct_connect_gateway_module.html
    - name: Create AWS Direct Connect Gateway
      aws_direct_connect_gateway:
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        region: "{{ aws_region }}"
        name: "{{ aws_direct_connect_gateway_name }}"
        amazon_asn: 64512
        virtual_gateway_id: "{{ aws_vgw.vgw.id }}"
      register: aws_direct_connect_gateway
      when: public_connection != true

    - name: Create Pureport Network
      pureport_network:
        api_base_url: "{{ pureport_api_base_url | default(omit) }}"
        api_key: "{{ pureport_api_key }}"
        api_secret: "{{ pureport_api_secret }}"
        account_href: "{{ pureport_account_href }}"
        name: "{{ pureport_network_name }}"
      register: pureport_network

    - name: Create Pureport AWS Direct Connect Connection
      pureport_aws_direct_connect_connection:
        api_base_url: "{{ pureport_api_base_url | default(omit) }}"
        api_key: "{{ pureport_api_key }}"
        api_secret: "{{ pureport_api_secret }}"
        network_href: "{{ pureport_network.href }}"
        name: "{{ pureport_connection_name }}"
        speed: "{{ pureport_connection_speed }}"
        high_availability: "{{ pureport_connection_high_availability | default(omit) }}"
        location_href: "{{ pureport_connection_location_href }}"
        peering_type: "{{ pureport_connection_peering_type | default(omit) }}"
        billing_term: "{{ pureport_connection_billing_term }}"
        aws_account_id: "{{ aws_account_id }}"
        aws_region: "{{ aws_region }}"
        cloud_service_hrefs: "{{ public_connection | ternary(pureport_connection_cloud_service_hrefs, omit) }}"
        wait_for_server: true
      register: pureport_connection

    - name: Set fact 'pureport_gateways'
      set_fact:
        pureport_gateways: "{{ [pureport_connection.primary_gateway, pureport_connection.secondary_gateway] | select('defined') | list }}"

    # https://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/directconnect.html#DirectConnect.Client.confirm_connection
    - name: Confirm Direct Connect Connection(s)
      aws_direct_connect_confirm_connection:
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        region: "{{ aws_region }}"
        connection_id: "{{ item.remote_id }}"
      loop: "{{ pureport_gateways }}"
      register: aws_direct_connect_confirm_connections

    # https://docs.ansible.com/ansible/latest/modules/aws_direct_connect_virtual_interface_module.html
    # https://github.com/ansible/ansible/pull/48711
    - name: Create Direct Connect Virtual Interface(s)
      pr_48711_aws_direct_connect_virtual_interface:
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        region: "{{ aws_region }}"
        state: 'present'
        name: "{{ aws_direct_connect_virtual_interface_name }}-{{ idx + 1 }}"
        public: "{{ public_connection }}"
        direct_connect_gateway_id: "{{ public_connection | ternary(omit, aws_direct_connect_gateway.direct_connect_gateway_id) }}"
        id_to_associate: "{{ item.remote_id }}"
        vlan: "{{ item.vlan }}"
        bgp_asn: "{{ item.bgp_config.pureport_asn }}"
        customer_address: "{{ item.bgp_config.pureport_ip }}"
        amazon_address: "{{ item.bgp_config.customer_ip }}"
        cidr: "{{ public_connection | ternary([item.bgp_config.peering_subnet], omit) }}"
        authentication_key: "{{ item.bgp_config.password }}"
      loop: "{{ pureport_gateways }}"
      loop_control:
        index_var: idx
      register: aws_direct_connect_virtual_interfaces
      retries: 10  # For some reason this seems to fail the first few times, but eventually works...
      until: aws_direct_connect_virtual_interfaces is not failed
      delay: 10
